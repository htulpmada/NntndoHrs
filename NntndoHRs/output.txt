javac -d classfiles -sourcepath src src/nntndohrs/NntndoHRs.java
cat srcCodesNes/Errors/ArrayError1.nes
@---array access out of bounds
yoshi main(){
	triforce t = [];
	link(t,1);
	link(t,2);
	link(t,3);
	pit(t);
	pit("t[4]: ");
	pit(t[4]);
}

main()
cat srcCodesNes/Errors/ArrayError2.nes
@--------- syntax error from un initialized variable
yoshi main(){
	triforce t;
	pit(t);
}

main()

cat srcCodesNes/Errors/UndefineError.nes
@-------undefined variable error
yoshi main(){
	pit(i);
}

main()


cat srcCodesNes/Errors/ClosureError.nes
@-------  Closure error
yoshi main(){

	int i = 5;

	yoshi f = i;
	
	f();

}

main()


cat srcCodesNes/Errors/ArgumentError.nes
@-------  argument error
yoshi main(i){

}

main( 7 , 11 )

java -classpath classfiles nntndohrs.NntndoHRs srcCodesNes/Errors/ArrayError1.nes

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 < Ready..  Set....     Go!! >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>

[ 1, 2, 3, ] 
t[4]: 

ERROR: Woops: array[max index] is 3 and you asked for 4 line: 9

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 <        GAME OVER          >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>

java -classpath classfiles nntndohrs.NntndoHRs srcCodesNes/Errors/ArrayError2.nes

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 < Ready..  Set....     Go!! >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>


ERROR: Syntax Expected EQUAL, Received SEMI line: 3

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 <        GAME OVER          >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>

java -classpath classfiles nntndohrs.NntndoHRs srcCodesNes/Errors/UndefineError.nes

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 < Ready..  Set....     Go!! >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>


ERROR: variable i is undefined line: 3

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 <        GAME OVER          >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>

java -classpath classfiles nntndohrs.NntndoHRs srcCodesNes/Errors/ClosureError.nes

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 < Ready..  Set....     Go!! >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>


ERROR: Tried to call 5 as function. line: 8

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 <        GAME OVER          >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>

java -classpath classfiles nntndohrs.NntndoHRs srcCodesNes/Errors/ArgumentError.nes

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 < Ready..  Set....     Go!! >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>


ERROR: Wrong number of arguments line: 6

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 <        GAME OVER          >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>

cat srcCodesNes/Errors/OperatorError1.nes
@------bool add error
yoshi main(){

	bool t = true;
	bool f = false;

	pit(t+f);

}
main()
cat srcCodesNes/Errors/OperatorError2.nes
@------Not error
yoshi main(){

        str m = "string";

        pit(!m);

}

main()


cat srcCodesNes/Errors/OperatorError3.nes
@------ Subtraction error
yoshi main(){

	str s = "123";
	int i = 3;
        pit(s-i);

}

main()


cat srcCodesNes/Errors/OperatorError4.nes
@------Subtraction error
yoshi main(){

        str m = "string";

        str h = "ing";
	
        pit(m*h);

}

main()


java -classpath classfiles nntndohrs.NntndoHRs srcCodesNes/Errors/OperatorError1.nes

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 < Ready..  Set....     Go!! >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>


ERROR: Can't add: BOOLEAN and BOOLEAN line: 4

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 <        GAME OVER          >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>

java -classpath classfiles nntndohrs.NntndoHRs srcCodesNes/Errors/OperatorError2.nes

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 < Ready..  Set....     Go!! >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>


ERROR: Can't Not type:STRING line: 4

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 <        GAME OVER          >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>

java -classpath classfiles nntndohrs.NntndoHRs srcCodesNes/Errors/OperatorError3.nes

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 < Ready..  Set....     Go!! >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>


ERROR: Can't subtract: STRING and INTEGER line: 4

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 <        GAME OVER          >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>

java -classpath classfiles nntndohrs.NntndoHRs srcCodesNes/Errors/OperatorError4.nes

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 < Ready..  Set....     Go!! >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>


ERROR: Can't multiply: STRING and STRING line: 4

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 <        GAME OVER          >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>

cat srcCodesNes/Errors/OperatorError5.nes
@------Divide by Zero error
yoshi main(){

        int i = 4;
	int j = 0;

        pit(i/j);

}

main()


cat srcCodesNes/Errors/BadStatementError.nes
@------ error
yoshi main(){

}

main()
echo "Passing a file that doesnt exist called 'BadStatementError.txt'"
Passing a file that doesnt exist called 'BadStatementError.txt'
java -classpath classfiles nntndohrs.NntndoHRs srcCodesNes/Errors/OperatorError5.nes

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 < Ready..  Set....     Go!! >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>


ERROR: Divide by zero Paradox??????? line: 4

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 <        GAME OVER          >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>

java -classpath classfiles nntndohrs.NntndoHRs srcCodesNes/Errors/BadStatementError.nes

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 < Ready..  Set....     Go!! >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>


 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 < Congratulations you win!! >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>

java -classpath classfiles nntndohrs.NntndoHRs srcCodesNes/Errors/BadStatementError.txt

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 < Ready..  Set....     Go!! >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>


ERROR: Bad File Extension: must be  .nes 

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 <        GAME OVER          >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>

cat srcCodesNes/ArrayTest.nes
@---------------------------------------------- array test
@-------- 3 ways to initialize
@---------same basic array behavior as java

func main(){

@--------initialize test

	print("");
	print("------set test-----");
	print("");

	print("array a = [1,2,3,4];");
	array a = [1,2,3,4];@<--------given initial value;
@	print("a = " + a);@-------error: cant put array in with operators
	print("a = ");
	print(a);
	

@-----------set built in test

	print("");
	print("------set test-----");
	print("");

	print("set(a,0,0);");
	print("set(a,1,10);");
	print("set(a,2,20);");
	print("set(a,3,30);");
	print("");
	print("if you set out of bounds it appends to array ");
	print("");
	print("set(a,4,40);");

	set(a,0,0);
	set(a,1,10);
	set(a,2,20);
	set(a,3,30);
	set(a,4,40);@-------if set out of bounds it appends to arr instead of error
	print("");

	print("a = ");
	print(a);
	print("");


	print("single item array must have second arg of nothing");
	print("");
	print("Why because i said so");
	print("");
	print("ex..");
	print("");
	array a = [1,];@<------single item array must have second arg of nothing
	print("array a = [1,]");
	print("a[0]");
	print(a);

	print("");

@	print(a[1]);     @<------error: array of size 1


	array a = [];  @<--------can be empty need test insert, set, remove, on each initializer
	print("array a = [] ");
@	print("a = " + a);@-------error: cant put array in with operators

@	print(a[0]);@-------error: array is null

	print("print(a[0]) throws error");

@-------------------insert test------

	print("");
	print("------insert test-----");
	print("");

	print("insert on multi item initialize");
	print("");

	array i = [1,2,4,5,6];
	print("i = [1,2,4,5,6] ");
	print(i);
	print("");

	print("insert(array,index,value)");
	print("");

	print("insert(i,2,3)");
	print("");

	print("i  should [1,2,3,4,5,6] ");
	print(i);
	print("");

	print("insert on single item initialize");
	print("");

	array i = [1,];
	print("i = [1,] ");

	print("i[0] = " + i[0]);

	print("");
	print("insert(i,1,2)");
	print("");
	
	insert(i,1,2);

	print("i should be [1,2] ");
	print(i);

	print("");


	print("insert on empty initialize");

	array i = [];
	print("");
	print("insert(i,0,1)");
	
	insert(i,0,1);

	print("insert(i,1,2)");
	print("");
	
	insert(i,1,2);

	print("i should be [1,2] ");
	print(i);


@-------if set out of bounds it appends to arr instead of error
	print("");

	print("insert(i,5,3)");
	
	insert(i,5,3);

	print("");
	print("i should be [1,2,3] ");
	print(i);
	print("");


@-------------------append test------

	print("");
	print("------append test-----");
	print("");

	print("append on multi item initialize");
	print("");

	array a = [1,2,3,4,5];
	print("a = [1,2,3,4,5] ");
	print(a);
	print("");

	print("append(array,value)");
	print("");

	print("append(a,6)");
	append(a,6);
	print("");

	print("a should be [1,2,3,4,5,6] ");
	print(a);
	print("");

	print("append on single item initialize");
	print("");

	array a = [1,];
	print("a = [1,] ");

	print(a);

	print("");
	print("append(a,2)");
	print("");
	
	append(a,2);

	print("a should be [1,2] ");
	print(a);

	print("");


	print("append on empty initialize");
	print("");
	
	array a = [];
	print("array a =[]");
	print("");
	print("append(a,1)");
	
	append(a,1);

	print("append(a,2)");
	print("");
	
	append(a,2);

	print("a should be [1,2] ");
	print(a);
	print("");


@-------------------remove test------

	print("");
	print("------remove test-----");
	print("");


	array r =[1,2,3,4,5];
	print("remove on multi item initialize");
	print("");

	array r = [1,2,3,4,5];
	print("r = [1,2,3,4,5] ");
	print(r);
	print("");

	print("remove(array,index)");
	print("");

	print("remove(r,0) ");
	print("");

	remove(r,0);

	print("r  should [2,3,4,5,6] ");
	print(r);
	print("");

	print("remove on single item initialize");
	print("");

	array r = [1,];
	print("r = [1,] ");

	print(r);

	print("");
	print("remove(r,0)");
	print("");
	
	remove(r,0);

	print("r should be [] ");
@	print("r[0] == null " + r[0]);

	print("");


	print("remove on empty initialize throws error");

	array r =[];
	print("");
@	print("remove(r,0) ");
@	remove(r,0);
	print("");
	

	print("remove item from middle of array");
	print("");

	array r =[1,2,3,4,5];
	print("r = [1,2,3,4,5] ");
	print(r);
	print("");

	print("remove(r,2)");
	print("");

	remove(r,2);

	print("r should be [1,2,4,5] ");
	print(r);
	print("");




	print("remove out of bounds does NOT throw error instead removes last item");
	print("");

	array r =[1,2,3,4,5];
	print("r = [1,2,3,4,5] ");
	print(r);
	print("");

	print("remove(r,20)");
	print("");

	print("r should be [1,2,3,4] ");
	print(r);
	print("");


@-------------------length test------

	print("");
	print("------length test-----");
	print("");


	print("array l = [1,2,3,4,5];");
	print("");

	array l = [1,2,3,4,5];

	print("length(Aray)");
	print("");
	print("length(l)");
	print(length(l));
	print("");
	
	array l =[1,];

	print("array l = [1,];");
	print("");
	print("length(l)");
	print(length(l));
	print("");


	array l =[];

	print("array l = [];");
	print("");
	print("length(l)");
	print(length(l));
	print("");



}
main()
java -classpath classfiles nntndohrs.NntndoHRs srcCodesNes/ArrayTest.nes

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 < Ready..  Set....     Go!! >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>


------set test-----

array a = [1,2,3,4];
a = 
[ 1, 2, 3, 4, ] 

------set test-----

set(a,0,0);
set(a,1,10);
set(a,2,20);
set(a,3,30);

if you set out of bounds it appends to array 

set(a,4,40);

a = 
[ 0, 10, 20, 30, 40, ] 

single item array must have second arg of nothing

Why because i said so

ex..

array a = [1,]
a[0]
[ 1, ] 

array a = [] 
print(a[0]) throws error

------insert test-----

insert on multi item initialize

i = [1,2,4,5,6] 
[ 1, 2, 4, 5, 6, ] 

insert(array,index,value)

insert(i,2,3)

i  should [1,2,3,4,5,6] 
[ 1, 2, 4, 5, 6, ] 

insert on single item initialize

i = [1,] 
i[0] = 1

insert(i,1,2)

i should be [1,2] 
[ 1, 2, ] 

insert on empty initialize

insert(i,0,1)
insert(i,1,2)

i should be [1,2] 
[ 1, 2, ] 

insert(i,5,3)

i should be [1,2,3] 
[ 1, 2, 3, ] 


------append test-----

append on multi item initialize

a = [1,2,3,4,5] 
[ 1, 2, 3, 4, 5, ] 

append(array,value)

append(a,6)

a should be [1,2,3,4,5,6] 
[ 1, 2, 3, 4, 5, 6, ] 

append on single item initialize

a = [1,] 
[ 1, ] 

append(a,2)

a should be [1,2] 
[ 1, 2, ] 

append on empty initialize

array a =[]

append(a,1)
append(a,2)

a should be [1,2] 
[ 1, 2, ] 


------remove test-----

remove on multi item initialize

r = [1,2,3,4,5] 
[ 1, 2, 3, 4, 5, ] 

remove(array,index)

remove(r,0) 

r  should [2,3,4,5,6] 
[ 2, 3, 4, 5, ] 

remove on single item initialize

r = [1,] 
[ 1, ] 

remove(r,0)

r should be [] 

remove on empty initialize throws error


remove item from middle of array

r = [1,2,3,4,5] 
[ 1, 2, 3, 4, 5, ] 

remove(r,2)

r should be [1,2,4,5] 
[ 1, 2, 4, 5, ] 

remove out of bounds does NOT throw error instead removes last item

r = [1,2,3,4,5] 
[ 1, 2, 3, 4, 5, ] 

remove(r,20)

r should be [1,2,3,4] 
[ 1, 2, 3, 4, 5, ] 


------length test-----

array l = [1,2,3,4,5];

length(Aray)

length(l)
5

array l = [1,];

length(l)
1

array l = [];

length(l)
0


 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 < Congratulations you win!! >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>

cat srcCodesNes/ConditionalTest.nes
@---------conditional test

func main(){
	int i = 10;
	while (i > 0){
		
		@empty is ok
		if(){ }		
		else{}

		if(i == 8){print(i);}

		else if(i == 6){print(i);}

		else if(i == 4){print(i);}

		if(i == 2){print(i);}

		@print("i = " + i); 

		i = i - 1; 

	}	
}
main()
java -classpath classfiles nntndohrs.NntndoHRs srcCodesNes/ConditionalTest.nes

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 < Ready..  Set....     Go!! >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>

8
6
4
2

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 < Congratulations you win!! >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>

cat srcCodesNes/BasicFuncRecursionTest.nes
@------------ recursion  test

func main( k ){

	if(k>0){

		print(k);

		k = k - 1 ;

		main(k);

	}

	else{

		print(k);

		}

}

func Opening(){

	print("recursively count down to zero ");
	print("");

}

Opening()

main( 5 )java -classpath classfiles nntndohrs.NntndoHRs srcCodesNes/BasicFuncRecursionTest.nes

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 < Ready..  Set....     Go!! >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>

recursively count down to zero 

5
4
3
2
1
0

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 < Congratulations you win!! >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>

cat srcCodesNes/IterationTest.nes
@---------loop test

func main(){
	int alpha=10;
    while (alpha > 0) 
          {
	  print("alpha is " + alpha); 
          alpha = alpha - 1; 
          }
}
main()
java -classpath classfiles nntndohrs.NntndoHRs srcCodesNes/IterationTest.nes

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 < Ready..  Set....     Go!! >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>

alpha is 10
alpha is 9
alpha is 8
alpha is 7
alpha is 6
alpha is 5
alpha is 4
alpha is 3
alpha is 2
alpha is 1

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 < Congratulations you win!! >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>

cat srcCodesNes/FirstClassFunctionTest.nes
@----------------lambda  and paramater test

yoshi main(){

	yoshi x2( i, j, x, y, z, a){
		
		yoshi q = lambda(t){pit(t);};
		q(i);
		q(j);
		q(x);
		q(y);
		q(z);
		q(a);

	}

	x2(1,2,3,4,5,6);

	yoshi passFun = x2;

	pit("");

	passFun(6,5,4,3,2,1);

}

main()java -classpath classfiles nntndohrs.NntndoHRs srcCodesNes/FirstClassFunctionTest.nes

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 < Ready..  Set....     Go!! >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>

1
2
3
4
5
6

6
5
4
3
2
1

 <^^^^^^^^^^^^^^^^^^^^^^^^^^^>
 < Congratulations you win!! >
 <vvvvvvvvvvvvvvvvvvvvvvvvvvv>

